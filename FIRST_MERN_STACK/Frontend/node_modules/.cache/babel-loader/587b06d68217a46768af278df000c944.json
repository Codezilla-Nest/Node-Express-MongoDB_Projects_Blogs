{"ast":null,"code":"var _jsxFileName = \"/home/muhib/Desktop/SalikAli/Trash/Github Repositires/MERN/React-js-Blogs-and-Projects/Projects/MOVIE-FETCHING/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movieData, updateMoviesData] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  useState(null);\n  //Get Method by default\n  const fetchingMoviesHandler = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(\"https://swapi.dev/api/films/\");\n      if (!response.ok) {\n        throw new Error(\"Something went wrong\");\n      }\n      const data = await response.json();\n      const moviesData = data.results.map(movie => {\n        return {\n          id: movie.episode_id,\n          openingText: movie.opening_crawl,\n          title: movie.title,\n          releaseDate: movie.release_date\n        };\n      });\n      setLoading(false);\n      updateMoviesData(moviesData);\n    } catch (error) {}\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchingMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isLoading && movieData.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No movies found!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 50\n      }, this), !isLoading && movieData.length > 0 && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movieData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5G9DKlPBOMSBjZiU1sxoYU8xs20=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MoviesList","App","movieData","updateMoviesData","isLoading","setLoading","fetchingMoviesHandler","response","fetch","ok","Error","data","json","moviesData","results","map","movie","id","episode_id","openingText","opening_crawl","title","releaseDate","release_date","error","length"],"sources":["/home/muhib/Desktop/SalikAli/Trash/Github Repositires/MERN/React-js-Blogs-and-Projects/Projects/MOVIE-FETCHING/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movieData, updateMoviesData] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  useState(null);\n  //Get Method by default\n  const fetchingMoviesHandler = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(\"https://swapi.dev/api/films/\");\n      if (!response.ok) {\n        throw new Error(\"Something went wrong\");\n      }\n      const data = await response.json();\n      const moviesData = data.results.map((movie) => {\n        return {\n          id: movie.episode_id,\n          openingText: movie.opening_crawl,\n          title: movie.title,\n          releaseDate: movie.release_date,\n        };\n      });\n      setLoading(false);\n      updateMoviesData(moviesData);\n    } catch (error) {\n\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchingMoviesHandler}>Fetch Movies</button>\n      </section>\n\n      <section>\n        {!isLoading && movieData.length === 0 && <p>No movies found!</p>}\n        {!isLoading && movieData.length > 0 && (\n          <MoviesList movies={movieData} />\n        )}\n        {isLoading && <p>Loading....</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC;AAEnB,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,gBAAgB,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACM,SAAS,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC/CA,QAAQ,CAAC,IAAI,CAAC;EACd;EACA,MAAMQ,qBAAqB,GAAG,YAAY;IACxC,IAAI;MACFD,UAAU,CAAC,IAAI,CAAC;MAChB,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;MAC5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MACzC;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;MAClC,MAAMC,UAAU,GAAGF,IAAI,CAACG,OAAO,CAACC,GAAG,CAAEC,KAAK,IAAK;QAC7C,OAAO;UACLC,EAAE,EAAED,KAAK,CAACE,UAAU;UACpBC,WAAW,EAAEH,KAAK,CAACI,aAAa;UAChCC,KAAK,EAAEL,KAAK,CAACK,KAAK;UAClBC,WAAW,EAAEN,KAAK,CAACO;QACrB,CAAC;MACH,CAAC,CAAC;MACFlB,UAAU,CAAC,KAAK,CAAC;MACjBF,gBAAgB,CAACU,UAAU,CAAC;IAC9B,CAAC,CAAC,OAAOW,KAAK,EAAE,CAEhB;EACF,CAAC;EAED,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,wBACb;MAAA,uBACE;QAAQ,OAAO,EAAElB,qBAAsB;QAAA,UAAC;MAAY;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QACrD,eAEV;MAAA,WACG,CAACF,SAAS,IAAIF,SAAS,CAACuB,MAAM,KAAK,CAAC,iBAAI;QAAA,UAAG;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAI,EAC/D,CAACrB,SAAS,IAAIF,SAAS,CAACuB,MAAM,GAAG,CAAC,iBACjC,QAAC,UAAU;QAAC,MAAM,EAAEvB;MAAU;QAAA;QAAA;QAAA;MAAA,QAC/B,EACAE,SAAS,iBAAI;QAAA,UAAG;MAAW;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QACxB;EAAA;IAAA;IAAA;IAAA;EAAA,QACK;AAErB;AAAC,GA3CQH,GAAG;AAAA,KAAHA,GAAG;AA6CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}