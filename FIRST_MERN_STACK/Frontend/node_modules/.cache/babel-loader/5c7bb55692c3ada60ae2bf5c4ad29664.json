{"ast":null,"code":"var _jsxFileName = \"/home/muhib/Desktop/SalikAli/Trash/Github Repositires/MERN/React-js-Blogs-and-Projects/Projects/MOVIE-FETCHING/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport AddMovie from \"./components/AddMovie\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movieData, updateMoviesData] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  //Get Method by default\n  const fetchingMoviesHandler = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch(\"https://react-muhib-default-rtdb.firebaseio.com/movies.json\");\n      if (!response.ok) {\n        throw new Error(\"Something went wrong\");\n      }\n      const data = await response.json();\n      const loadedMovies = [];\n      for (const key of loadedMovies) {}\n      const moviesData = data.results.map(movie => {\n        return {\n          id: movie.episode_id,\n          openingText: movie.opening_crawl,\n          title: movie.title,\n          releaseDate: movie.release_date\n        };\n      });\n      updateMoviesData(moviesData);\n    } catch (error) {\n      setError(error.message);\n    }\n    setLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchingMoviesHandler();\n  }, [fetchingMoviesHandler]);\n  async function addMovieHandler(movie) {\n    const response = await fetch(\"https://react-muhib-default-rtdb.firebaseio.com/movies.json\", {\n      method: \"POST\",\n      body: JSON.stringify(movie),\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    });\n    const data = response.json();\n    console.log(data);\n  }\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Found no Movies\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 17\n  }, this);\n  if (movieData.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(MoviesList, {\n      movies: movieData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }, this);\n  }\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }, this);\n  }\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(AddMovie, {\n        onAddMovie: addMovieHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchingMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6BVeQwVLJ5CZascU8VgGXqpPSvE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","AddMovie","MoviesList","App","movieData","updateMoviesData","isLoading","setLoading","error","setError","fetchingMoviesHandler","response","fetch","ok","Error","data","json","loadedMovies","key","moviesData","results","map","movie","id","episode_id","openingText","opening_crawl","title","releaseDate","release_date","message","addMovieHandler","method","body","JSON","stringify","headers","console","log","content","length"],"sources":["/home/muhib/Desktop/SalikAli/Trash/Github Repositires/MERN/React-js-Blogs-and-Projects/Projects/MOVIE-FETCHING/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport AddMovie from \"./components/AddMovie\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movieData, updateMoviesData] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  //Get Method by default\n  const fetchingMoviesHandler = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch(\n        \"https://react-muhib-default-rtdb.firebaseio.com/movies.json\"\n      );\n      if (!response.ok) {\n        throw new Error(\"Something went wrong\");\n      }\n      const data = await response.json();\n      const loadedMovies=[];\n      for(const key of loadedMovies){\n        \n      }\n      const moviesData = data.results.map((movie) => {\n        return {\n          id: movie.episode_id,\n          openingText: movie.opening_crawl,\n          title: movie.title,\n          releaseDate: movie.release_date,\n        };\n      });\n      updateMoviesData(moviesData);\n    } catch (error) {\n      setError(error.message);\n    }\n    setLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchingMoviesHandler();\n  }, [fetchingMoviesHandler]);\n\n  async function addMovieHandler(movie) {\n    const response = await fetch(\n      \"https://react-muhib-default-rtdb.firebaseio.com/movies.json\",\n      {\n        method: \"POST\",\n        body: JSON.stringify(movie),\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n      }\n    );\n    const data = response.json();\n    console.log(data);\n  }\n\n  let content = <p>Found no Movies</p>;\n  if (movieData.length > 0) {\n    content = <MoviesList movies={movieData} />;\n  }\n  if (error) {\n    content = <p>{error}</p>;\n  }\n  if (isLoading) {\n    content = <p>Loading....</p>;\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section>\n      <section>\n        <button onClick={fetchingMoviesHandler}>Fetch Movies</button>\n      </section>\n\n      <section>{content}</section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}