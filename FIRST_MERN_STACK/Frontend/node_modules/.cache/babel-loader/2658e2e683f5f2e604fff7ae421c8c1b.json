{"ast":null,"code":"var _jsxFileName = \"/home/muhib/Desktop/SalikAli/Trash/Github Repositires/MERN/Express-MonogoDB-Node/FIRST_MERN_STACK/Frontend/src/Components/AddMessage.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useCallback, useRef, useState } from \"react\";\nimport Model from \"../UI/Model\";\nimport * as addMessageStyle from \"./AddMessage.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddMessage = props => {\n  _s();\n  const [isModel, setModel] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [savedSuccessfully, setSavedSuccessfully] = useState(false);\n  const message = useRef(\"\");\n  const code = useRef(\"\");\n  const savingDataHandler = useCallback(async secretData => {\n    console.log(secretData);\n    const response = await fetch(\"http://localhost:9000/messages\", {\n      method: \"POST\",\n      body: JSON.stringify(secretData),\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    if (data) {}\n  }, []);\n  const validationForm = e => {\n    e.preventDefault();\n    const data = {\n      message: message.current.value,\n      code: code.current.value\n    };\n    if (data.message.trim() === \"\" && data.code.trim() !== \"\") {\n      setError(\"Message Filed is Empty\");\n      setModel(() => true);\n    } else if (data.message.trim() !== \"\" && data.code.trim() === \"\") {\n      setError(\"Secret Code Field is Empty !\");\n      setModel(() => true);\n    } else if (data.message.trim() === \"\" && data.code.trim() === \"\") {\n      setError(\"Both Fields are Empty !\");\n      setModel(() => true);\n    } else if (data.message.trim() !== \"\" && data.code.trim() !== \"\" && data.code.length < 5) {\n      setError(\"Code must contain at least 5 characters!\");\n      setModel(() => true);\n    } else {\n      savingDataHandler(data);\n    }\n  };\n  const hideModelHanler = () => {\n    setModel(() => false);\n  };\n  let content = \"\";\n  if (isModel) {\n    content = /*#__PURE__*/_jsxDEV(Model, {\n      hide: hideModelHanler,\n      errorMsg: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }, this);\n  }\n  if (savedSuccessfully) {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      class: addMessageStyle[\"success-message\"],\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Data saved successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  } else {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: addMessageStyle[\"form-container\"],\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"message\",\n          children: \"Message:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"message\",\n          name: \"message\",\n          rows: \"10\",\n          cols: \"30\",\n          ref: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"secret-code\",\n          children: \"Set Secret Code:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          ref: code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: addMessageStyle.btn,\n          type: \"submit\",\n          class: \"btn\",\n          onClick: validationForm,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 10\n  }, this);\n};\n_s(AddMessage, \"7gkO/RMpEDmK+LQVhnZRL85635s=\");\n_c = AddMessage;\nexport default AddMessage;\nvar _c;\n$RefreshReg$(_c, \"AddMessage\");","map":{"version":3,"names":["React","Fragment","useCallback","useRef","useState","Model","addMessageStyle","AddMessage","props","isModel","setModel","error","setError","savedSuccessfully","setSavedSuccessfully","message","code","savingDataHandler","secretData","console","log","response","fetch","method","body","JSON","stringify","headers","data","json","validationForm","e","preventDefault","current","value","trim","length","hideModelHanler","content","btn"],"sources":["/home/muhib/Desktop/SalikAli/Trash/Github Repositires/MERN/Express-MonogoDB-Node/FIRST_MERN_STACK/Frontend/src/Components/AddMessage.js"],"sourcesContent":["import React, { Fragment, useCallback, useRef, useState } from \"react\";\nimport Model from \"../UI/Model\";\n\nimport * as addMessageStyle from \"./AddMessage.module.css\";\n\nconst AddMessage = (props) => {\n  const [isModel, setModel] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [savedSuccessfully, setSavedSuccessfully] = useState(false);\n\n  const message = useRef(\"\");\n  const code = useRef(\"\");\n\n  const savingDataHandler = useCallback(async (secretData) => {\n    console.log(secretData);\n    const response = await fetch(\"http://localhost:9000/messages\", {\n      method: \"POST\",\n      body: JSON.stringify(secretData),\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    });\n    const data = await response.json();\n    if(data){\n        \n    }\n  }, []);\n\n  const validationForm = (e) => {\n    e.preventDefault();\n    const data = {\n      message: message.current.value,\n      code: code.current.value,\n    };\n    if (data.message.trim() === \"\" && data.code.trim() !== \"\") {\n      setError(\"Message Filed is Empty\");\n      setModel(() => true);\n    } else if (data.message.trim() !== \"\" && data.code.trim() === \"\") {\n      setError(\"Secret Code Field is Empty !\");\n      setModel(() => true);\n    } else if (data.message.trim() === \"\" && data.code.trim() === \"\") {\n      setError(\"Both Fields are Empty !\");\n      setModel(() => true);\n    } else if (\n      data.message.trim() !== \"\" &&\n      data.code.trim() !== \"\" &&\n      data.code.length < 5\n    ) {\n      setError(\"Code must contain at least 5 characters!\");\n      setModel(() => true);\n    } else {\n      savingDataHandler(data);\n    }\n  };\n  const hideModelHanler = () => {\n    setModel(() => false);\n  };\n\n  let content = \"\";\n  if (isModel) {\n    content = <Model hide={hideModelHanler} errorMsg={error} />;\n  }\n  if (savedSuccessfully) {\n    content = (\n      <div class={addMessageStyle[\"success-message\"]}>\n        <p>Data saved successfully</p>\n      </div>\n    );\n  } else {\n    content = (\n      <div className={addMessageStyle[\"form-container\"]}>\n        <form>\n          <label for=\"message\">Message:</label>\n          <textarea\n            id=\"message\"\n            name=\"message\"\n            rows=\"10\"\n            cols=\"30\"\n            ref={message}\n          />\n          <br />\n          <label for=\"secret-code\">Set Secret Code:</label>\n          <input type=\"password\" ref={code} />\n          <br />\n          <button\n            className={addMessageStyle.btn}\n            type=\"submit\"\n            class=\"btn\"\n            onClick={validationForm}\n          >\n            Add\n          </button>\n        </form>\n      </div>\n    );\n  }\n\n  return <Fragment>{content}</Fragment>;\n};\n\nexport default AddMessage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}