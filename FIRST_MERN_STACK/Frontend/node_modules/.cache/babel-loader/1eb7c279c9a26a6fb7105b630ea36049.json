{"ast":null,"code":"var _jsxFileName = \"/home/muhib/Desktop/SalikAli/Trash/Github Repositires/MERN/Express-MonogoDB-Node/FIRST_MERN_STACK/Frontend/src/Components/ShowMessage.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport * as showMessage from \"./ShowMessage.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShowMessage = props => {\n  _s();\n  const [secretData, setsecretData] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const dataFetchingHandler = useCallback(async () => {\n    try {\n      const response = await fetch(`http://localhost:9000/messages/${props.value}`);\n      if (!response.ok) {\n        throw new Error(\"Something Went Wrong\");\n      }\n      const data = await response.json();\n      if (!data) {\n        throw new Error(\"Wrong Secret code! Try again\");\n      }\n      setsecretData({\n        message: data.message,\n        code: data.code\n      });\n    } catch (error) {\n      setErrorMsg(error.message);\n    }\n  }, []);\n  useEffect(() => {\n    dataFetchingHandler();\n  }, [dataFetchingHandler]);\n  let content = \"\";\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      class: [\"loading-spinner\"],\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: [\"spinner-border text-primary\"],\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          class: [\"sr-only\"],\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n  if (errorMsg) {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: showMessage[\"error-message\"],\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n  if (secretData) {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      class: showMessage.card,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: showMessage[\"card-header\"],\n        children: `Secret Code: ${secretData.code}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: showMessage[\"card-content\"],\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: secretData.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 10\n  }, this);\n};\n_s(ShowMessage, \"1DlHYanFU27cKng5OUQtgqcNjnM=\");\n_c = ShowMessage;\nexport default ShowMessage;\nvar _c;\n$RefreshReg$(_c, \"ShowMessage\");","map":{"version":3,"names":["React","Fragment","useCallback","useEffect","useState","showMessage","ShowMessage","props","secretData","setsecretData","isLoading","setIsLoading","errorMsg","setErrorMsg","dataFetchingHandler","response","fetch","value","ok","Error","data","json","message","code","error","content","card"],"sources":["/home/muhib/Desktop/SalikAli/Trash/Github Repositires/MERN/Express-MonogoDB-Node/FIRST_MERN_STACK/Frontend/src/Components/ShowMessage.js"],"sourcesContent":["import React, { Fragment, useCallback, useEffect, useState } from \"react\";\n\nimport * as showMessage from \"./ShowMessage.module.css\";\n\nconst ShowMessage = (props) => {\n  const [secretData, setsecretData] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const dataFetchingHandler = useCallback(async () => {\n    try {\n      const response = await fetch(\n        `http://localhost:9000/messages/${props.value}`\n      );\n      if (!response.ok) {\n        throw new Error(\"Something Went Wrong\");\n      }\n      const data = await response.json();\n      if (!data) {\n        throw new Error(\"Wrong Secret code! Try again\");\n      }\n      setsecretData({\n        message: data.message,\n        code: data.code,\n      });\n    } catch (error) {\n      setErrorMsg(error.message);\n    }\n  }, []);\n  useEffect(() => {\n    dataFetchingHandler();\n  }, [dataFetchingHandler]);\n\n  let content = \"\";\n\n  if (isLoading) {\n    content = (\n      <div class={[\"loading-spinner\"]}>\n        <div class={[\"spinner-border text-primary\"]} role=\"status\">\n          <span class={[\"sr-only\"]}>Loading...</span>\n        </div>\n      </div>\n    );\n  }\n  if (errorMsg) {\n    content = (\n      <div className={showMessage[\"error-message\"]}>\n        <h2>{errorMsg}</h2>\n      </div>\n    );\n  }\n  if (secretData) {\n    content = (\n      <div class={showMessage.card}>\n        <div\n          class={showMessage[\"card-header\"]}\n        >{`Secret Code: ${secretData.code}`}</div>\n        <div class={showMessage[\"card-content\"]}>\n          <p>{secretData.message}</p>\n        </div>\n      </div>\n    );\n  }\n\n  return <Fragment>{content}</Fragment>;\n};\n\nexport default ShowMessage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAEzE,OAAO,KAAKC,WAAW,MAAM,0BAA0B;AAAC;AAExD,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAA;EAC7B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMU,mBAAmB,GAAGZ,WAAW,CAAC,YAAY;IAClD,IAAI;MACF,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CACzB,kCAAiCT,KAAK,CAACU,KAAM,EAAC,CAChD;MACD,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MACzC;MACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,EAAE;MAClC,IAAI,CAACD,IAAI,EAAE;QACT,MAAM,IAAID,KAAK,CAAC,8BAA8B,CAAC;MACjD;MACAV,aAAa,CAAC;QACZa,OAAO,EAAEF,IAAI,CAACE,OAAO;QACrBC,IAAI,EAAEH,IAAI,CAACG;MACb,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdX,WAAW,CAACW,KAAK,CAACF,OAAO,CAAC;IAC5B;EACF,CAAC,EAAE,EAAE,CAAC;EACNnB,SAAS,CAAC,MAAM;IACdW,mBAAmB,EAAE;EACvB,CAAC,EAAE,CAACA,mBAAmB,CAAC,CAAC;EAEzB,IAAIW,OAAO,GAAG,EAAE;EAEhB,IAAIf,SAAS,EAAE;IACbe,OAAO,gBACL;MAAK,KAAK,EAAE,CAAC,iBAAiB,CAAE;MAAA,uBAC9B;QAAK,KAAK,EAAE,CAAC,6BAA6B,CAAE;QAAC,IAAI,EAAC,QAAQ;QAAA,uBACxD;UAAM,KAAK,EAAE,CAAC,SAAS,CAAE;UAAA,UAAC;QAAU;UAAA;UAAA;UAAA;QAAA;MAAO;QAAA;QAAA;QAAA;MAAA;IACvC;MAAA;MAAA;MAAA;IAAA,QAET;EACH;EACA,IAAIb,QAAQ,EAAE;IACZa,OAAO,gBACL;MAAK,SAAS,EAAEpB,WAAW,CAAC,eAAe,CAAE;MAAA,uBAC3C;QAAA,UAAKO;MAAQ;QAAA;QAAA;QAAA;MAAA;IAAM;MAAA;MAAA;MAAA;IAAA,QAEtB;EACH;EACA,IAAIJ,UAAU,EAAE;IACdiB,OAAO,gBACL;MAAK,KAAK,EAAEpB,WAAW,CAACqB,IAAK;MAAA,wBAC3B;QACE,KAAK,EAAErB,WAAW,CAAC,aAAa,CAAE;QAAA,UACjC,gBAAeG,UAAU,CAACe,IAAK;MAAC;QAAA;QAAA;QAAA;MAAA,QAAO,eAC1C;QAAK,KAAK,EAAElB,WAAW,CAAC,cAAc,CAAE;QAAA,uBACtC;UAAA,UAAIG,UAAU,CAACc;QAAO;UAAA;UAAA;UAAA;QAAA;MAAK;QAAA;QAAA;QAAA;MAAA,QACvB;IAAA;MAAA;MAAA;MAAA;IAAA,QAET;EACH;EAEA,oBAAO,QAAC,QAAQ;IAAA,UAAEG;EAAO;IAAA;IAAA;IAAA;EAAA,QAAY;AACvC,CAAC;AAAC,GA5DInB,WAAW;AAAA,KAAXA,WAAW;AA8DjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}